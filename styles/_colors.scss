@use "themes";

@mixin Theme($themes: themes.$themes) {
	// [Key], [Value] in [Container]
	@each $theme-name, $theme in $themes {
		@at-root .#{$theme-name} #{&} {
			@content ($theme);
		}
	}
}

@mixin AtLevelTheme($themes: themes.$themes) {
	// [Key], [Value] in [Container]
	@each $theme-name, $theme in $themes {
		@at-root #{&}.#{$theme-name} {
			@content ($theme);
		}
	}
}

@mixin MakeThemes($themes) {
	// [Key], [Value] in [Container]
	@each $theme-name, $theme in $themes {
		.#{$theme-name} {
			p,
			span,
			th,
			td,
			li,
			label,
			input,
			button {
				color: map-get($theme, content-color);
			}

			h1,
			h2,
			h3,
			h4,
			h5,
			h6 {
				color: map-get($theme, header-color);
			}

			table,
			th,
			td,
			tr,
			.smart-table-separator {
				border-color: map-get($theme, content-color);
			}

			a,
			a:visited {
				color: map-get($theme, link-color);
			}

			input,
			button {
				background-color: map-get($theme, input-button-background);
				border-color: map-get($theme, input-button-border-color);
			}

			button {
				&:hover {
					background-color: map-get($theme, button-hovered-background);
				}
			}

			table.alternating-colors {
				th,
				td {
					border: none;

					&:not(:last-child) {
						border-right: 1px solid map-get($theme, table-inner-border-color);
					}
				}

				//tr:first-child:nth-child(odd) {
				th {
					background-color: map-get($theme, table-header-background-color);
				}

				tr:nth-child(odd) {
					background-color: map-get($theme, table-odd-row-background-color);
				}

				tr:nth-child(even) {
					background-color: map-get($theme, table-even-row-background-color);
				}

				.smart-table-separator {
					border: none;
					background-color: map-get($theme, table-header-background-color);
					border-bottom: 1px solid map-get($theme, table-odd-row-background-color);
				}
			}

			.homebrew-example,
			.trade-info {
				background-color: map-get($theme, example-background-color);
			}
		}
	}
}

@include MakeThemes(themes.$themes);
