@use "colors";
@use "common";

body {
	@include colors.AtLevelTheme() using ($theme) {
		background: {
			image: map-get($theme, body-background, image);
			position: map-get($theme, body-background, position);
			repeat: map-get($theme, body-background, repeat);
			size: map-get($theme, body-background, size);
		}
	}

	height: 100vh;
	width: 100vw;

	margin: 0;
	padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 20px 0 5px 0;
}

h4 {
	font-style: italic;
}

th,
td {
	@include colors.Theme() using ($theme) {
		border: 1px solid map-get($theme, content-color);
	}
	padding: 0 0.5rem;

	// &:not(:last-child) {
	// 	padding-right: 0.5rem;
	// }
}

p,
li {
	max-width: 60em;
	min-width: 25em;
}

#content-spacer {
	height: 100%;
	width: 100%;

	padding: 50px;
}

#content {
	@include colors.Theme() using ($theme) {
		background-color: map-get($theme, content-background-color);
	}

	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;

	padding: 20px;
	border-radius: 20px;

	#header,
	#footer {
		width: 100%;
		flex-grow: 0;
		flex-shrink: 0;
	}

	#page-area {
		width: 100%;
		padding: {
			right: 1rem;
			top: 0.5rem;
			bottom: 0.5rem;
			left: 1rem;
		}
		flex-grow: 1;
		flex-shrink: 1;
		flex-basis: 0;

		overflow: auto;
	}
}

@include colors.Theme() using ($theme) {
	#header {
		border-bottom: 1px solid map-get($theme, content-color);
	}

	#footer {
		border-top: 1px solid map-get($theme, content-color);
	}
}

#campaigns-bar {
	a {
		@include colors.Theme() using ($theme) {
			color: map-get($theme, content-color);
			background-color: map-get($theme, campaign-bar-background-color);
		}

		display: inline-block;
		border-radius: 5px;
		margin-right: 0.5rem;
		margin-bottom: 0.5rem;

		padding: 0.5rem;

		&:hover {
			@include colors.Theme() using ($theme) {
				background-color: map-get($theme, campaign-bar-background-color-hover);
			}

			text-decoration: underline;
			cursor: pointer;
		}
	}
}

.ap-dir-display-container {
	margin-bottom: 0.5rem;

	:not(:last-child) {
		margin-right: 0.5rem;
	}
}

.header-container {
	display: flex;
	width: 100%;

	.header-content {
		flex-grow: 1;
		flex-shrink: 0;
	}

	.header-auth-content {
		flex-grow: 0;
		flex-shrink: 0;
	}
}

.auth-display-container {
	text-align: right;

	.auth-display-label {
		margin-right: 0.5rem;
	}

	&.auth-display-upper-container {
		margin-bottom: 0.25rem;
	}
}

ap-auth-container,
ap-auth-container * {
	font-style: italic;
}

ap-stat-block * {
	display: none;
}

.homebrew-example {
	float: right;
	max-width: 40%;
	padding: 0.5rem;
	margin: 0.5rem;
}

.character-image-left,
.character-image-right {
	max-height: 500px;
	max-width: 500px;
}

.character-image-left {
	float: left;
	margin-right: 0.5rem;
}

.character-image-right {
	float: right;
	margin-left: 0.5rem;
}

.two-columns-container {
	@include colors.Theme() using ($theme) {
		column-rule: 1px solid map-get($theme, content-color);
	}

	margin-top: 0.5rem;
	columns: 300px 2;
	column-gap: 2em;
	width: 75%;
	max-width: 1000px;
	min-width: 200px;

	.item-container + .item-container {
		@include colors.Theme() using ($theme) {
			border-top: 1px solid map-get($theme, content-color);
		}
	}

	.item-name {
		@include colors.Theme() using ($theme) {
			color: map-get($theme, header-color);
		}

		font-weight: bold;
	}
}
