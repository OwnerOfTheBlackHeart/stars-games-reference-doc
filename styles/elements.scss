@use "colors";
@use "common";

* {
	box-sizing: border-box;
}

.stat-block-container {
	@include colors.AtLevelTheme() using ($theme) {
		table {
			border-top: 1px solid map-get($theme, content-color);

			th {
				vertical-align: top;
				border-right: 1px solid map-get($theme, content-color);
				text-align: right;
				padding-right: 0.25rem;
			}

			td {
				vertical-align: top;
				padding: 0 2rem 0 0.25rem;
			}
		}
	}
}

.time-table-container {
	th,
	td {
		vertical-align: middle;
		padding: 0.25rem 0.5rem 0.25rem 0.5rem;
		white-space: nowrap;
	}

	.auth-row {
		font-style: italic;
	}

	@include colors.AtLevelTheme() using ($theme) {
		.previous-date {
			color: map-get($theme, previous-date-color);
		}

		.current-date {
			color: map-get($theme, current-date-color);
		}

		.future-date {
			color: map-get($theme, future-date-color);
		}
	}
}

.birthday-generator-container {
	@include colors.AtLevelTheme() using ($theme) {
		.birthday-display {
			color: map-get($theme, birthday-display-color);
		}
	}

	.birthday-header {
		margin-top: 0;
	}

	.birthday-age-input,
	.birthday-generate-button,
	.birthday-reset-button {
		width: 125px;
		padding-left: 0;
		padding-right: 0;
		box-sizing: border-box;
	}

	.birthday-age-input {
		text-align: right;
	}

	.input-container {
		display: inline-block;

		> * {
			margin-right: 1rem;
		}
	}

	p {
		min-width: 300px;
		max-width: 750px;
	}
}
